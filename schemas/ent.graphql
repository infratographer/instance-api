directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateInstanceInput is used for create Instance object.
Input was generated by ent.
"""
input CreateInstanceInput {
  name: String!
  createdAt: Time
  updatedAt: Time
  tenantID: ID!
  instanceProviderID: ID!
  metadatumIDs: [ID!]
}
"""
CreateInstanceMetadataInput is used for create InstanceMetadata object.
Input was generated by ent.
"""
input CreateInstanceMetadataInput {
  namespace: String!
  data: RawMessage!
  createdAt: Time
  updatedAt: Time
  instanceID: ID!
}
"""
CreateInstanceProviderInput is used for create InstanceProvider object.
Input was generated by ent.
"""
input CreateInstanceProviderInput {
  name: String!
  createdAt: Time
  updatedAt: Time
  instanceIDs: [ID!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Instance implements Node @key(fields: "id") {
  id: ID!
  name: String!
  createdAt: Time!
  updatedAt: Time!
  instanceProviderID: ID!
  tenantID: ID!
  instanceProvider: InstanceProvider!
  metadata(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for InstanceMetadataSlice returned from the connection."""
    orderBy: InstanceMetadataOrder

    """Filtering options for InstanceMetadataSlice returned from the connection."""
    where: InstanceMetadataWhereInput
  ): InstanceMetadataConnection!
}
"""A connection to a list of items."""
type InstanceConnection {
  """A list of edges."""
  edges: [InstanceEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type InstanceEdge {
  """The item at the end of the edge."""
  node: Instance
  """A cursor for use in pagination."""
  cursor: Cursor!
}
type InstanceMetadata implements Node @key(fields: "id") {
  id: ID!
  namespace: String!
  data: RawMessage!
  createdAt: Time!
  updatedAt: Time!
  instanceID: ID!
  instance: Instance!
}
"""A connection to a list of items."""
type InstanceMetadataConnection {
  """A list of edges."""
  edges: [InstanceMetadataEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type InstanceMetadataEdge {
  """The item at the end of the edge."""
  node: InstanceMetadata
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for InstanceMetadata connections"""
input InstanceMetadataOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order InstanceMetadataSlice."""
  field: InstanceMetadataOrderField!
}
"""Properties by which InstanceMetadata connections can be ordered."""
enum InstanceMetadataOrderField {
  NAME
  CREATED_AT
  UPDATED_AT
}
"""
InstanceMetadataWhereInput is used for filtering InstanceMetadata objects.
Input was generated by ent.
"""
input InstanceMetadataWhereInput {
  not: InstanceMetadataWhereInput
  and: [InstanceMetadataWhereInput!]
  or: [InstanceMetadataWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """namespace field predicates"""
  namespace: String
  namespaceNEQ: String
  namespaceIn: [String!]
  namespaceNotIn: [String!]
  namespaceGT: String
  namespaceGTE: String
  namespaceLT: String
  namespaceLTE: String
  namespaceContains: String
  namespaceHasPrefix: String
  namespaceHasSuffix: String
  namespaceEqualFold: String
  namespaceContainsFold: String
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """instance_id field predicates"""
  instanceID: ID
  instanceIDNEQ: ID
  instanceIDIn: [ID!]
  instanceIDNotIn: [ID!]
  """instance edge predicates"""
  hasInstance: Boolean
  hasInstanceWith: [InstanceWhereInput!]
}
"""Ordering options for Instance connections"""
input InstanceOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Instances."""
  field: InstanceOrderField!
}
"""Properties by which Instance connections can be ordered."""
enum InstanceOrderField {
  NAME
  CREATED_AT
  UPDATED_AT
}
type InstanceProvider implements Node {
  id: ID!
  name: String!
  createdAt: Time!
  updatedAt: Time!
  instances(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Instances returned from the connection."""
    orderBy: InstanceOrder

    """Filtering options for Instances returned from the connection."""
    where: InstanceWhereInput
  ): InstanceConnection!
}
"""A connection to a list of items."""
type InstanceProviderConnection {
  """A list of edges."""
  edges: [InstanceProviderEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type InstanceProviderEdge {
  """The item at the end of the edge."""
  node: InstanceProvider
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for InstanceProvider connections"""
input InstanceProviderOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order InstanceProviders."""
  field: InstanceProviderOrderField!
}
"""Properties by which InstanceProvider connections can be ordered."""
enum InstanceProviderOrderField {
  NAME
  CREATED_AT
  UPDATED_AT
}
"""
InstanceProviderWhereInput is used for filtering InstanceProvider objects.
Input was generated by ent.
"""
input InstanceProviderWhereInput {
  not: InstanceProviderWhereInput
  and: [InstanceProviderWhereInput!]
  or: [InstanceProviderWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """instances edge predicates"""
  hasInstances: Boolean
  hasInstancesWith: [InstanceWhereInput!]
}
"""
InstanceWhereInput is used for filtering Instance objects.
Input was generated by ent.
"""
input InstanceWhereInput {
  not: InstanceWhereInput
  and: [InstanceWhereInput!]
  or: [InstanceWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """instance_provider_id field predicates"""
  instanceProviderID: ID
  instanceProviderIDNEQ: ID
  instanceProviderIDIn: [ID!]
  instanceProviderIDNotIn: [ID!]
  """tenant_id field predicates"""
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  """instance_provider edge predicates"""
  hasInstanceProvider: Boolean
  hasInstanceProviderWith: [InstanceProviderWhereInput!]
  """metadata edge predicates"""
  hasMetadata: Boolean
  hasMetadataWith: [InstanceMetadataWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "go.infratographer.com/instance-api/internal/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  instances(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Instances returned from the connection."""
    orderBy: InstanceOrder

    """Filtering options for Instances returned from the connection."""
    where: InstanceWhereInput
  ): InstanceConnection!
  instanceMetadataSlice(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for InstanceMetadataSlice returned from the connection."""
    orderBy: InstanceMetadataOrder

    """Filtering options for InstanceMetadataSlice returned from the connection."""
    where: InstanceMetadataWhereInput
  ): InstanceMetadataConnection!
  instanceProviders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for InstanceProviders returned from the connection."""
    orderBy: InstanceProviderOrder

    """Filtering options for InstanceProviders returned from the connection."""
    where: InstanceProviderWhereInput
  ): InstanceProviderConnection!
}
"""The builtin Time type"""
scalar Time
