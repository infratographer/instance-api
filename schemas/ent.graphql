directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateInstanceInput is used for create Instance object.
Input was generated by ent.
"""
input CreateInstanceInput {
  name: String!
  createdAt: Time
  updatedAt: Time
  tenantID: ID!
  instanceProviderID: ID!
  metadatumIDs: [ID!]
}
"""
CreateInstanceMetadataInput is used for create InstanceMetadata object.
Input was generated by ent.
"""
input CreateInstanceMetadataInput {
  namespace: String!
  data: RawMessage!
  createdAt: Time
  updatedAt: Time
  instanceID: ID!
}
"""
CreateInstanceProviderInput is used for create InstanceProvider object.
Input was generated by ent.
"""
input CreateInstanceProviderInput {
  name: String!
  createdAt: Time
  updatedAt: Time
  instanceIDs: [ID!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Instance implements Node @key(fields: "id") {
  id: ID!
  name: String!
  createdAt: Time!
  updatedAt: Time!
  instanceProviderID: ID!
  tenantID: ID!
  instanceProvider: InstanceProvider!
  metadata(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for InstanceMetadataSlice returned from the connection."""
    orderBy: InstanceMetadataOrder
  ): InstanceMetadataConnection!
}
"""A connection to a list of items."""
type InstanceConnection {
  """A list of edges."""
  edges: [InstanceEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type InstanceEdge {
  """The item at the end of the edge."""
  node: Instance
  """A cursor for use in pagination."""
  cursor: Cursor!
}
type InstanceMetadata implements Node @key(fields: "id") {
  id: ID!
  namespace: String!
  data: RawMessage!
  createdAt: Time!
  updatedAt: Time!
  instanceID: ID!
  instance: Instance!
}
"""A connection to a list of items."""
type InstanceMetadataConnection {
  """A list of edges."""
  edges: [InstanceMetadataEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type InstanceMetadataEdge {
  """The item at the end of the edge."""
  node: InstanceMetadata
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for InstanceMetadata connections"""
input InstanceMetadataOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order InstanceMetadataSlice."""
  field: InstanceMetadataOrderField!
}
"""Properties by which InstanceMetadata connections can be ordered."""
enum InstanceMetadataOrderField {
  NAME
  CREATED_AT
  UPDATED_AT
}
"""Ordering options for Instance connections"""
input InstanceOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Instances."""
  field: InstanceOrderField!
}
"""Properties by which Instance connections can be ordered."""
enum InstanceOrderField {
  NAME
  CREATED_AT
  UPDATED_AT
}
type InstanceProvider implements Node {
  id: ID!
  name: String!
  createdAt: Time!
  updatedAt: Time!
  instances(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Instances returned from the connection."""
    orderBy: InstanceOrder
  ): InstanceConnection!
}
"""A connection to a list of items."""
type InstanceProviderConnection {
  """A list of edges."""
  edges: [InstanceProviderEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type InstanceProviderEdge {
  """The item at the end of the edge."""
  node: InstanceProvider
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for InstanceProvider connections"""
input InstanceProviderOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order InstanceProviders."""
  field: InstanceProviderOrderField!
}
"""Properties by which InstanceProvider connections can be ordered."""
enum InstanceProviderOrderField {
  NAME
  CREATED_AT
  UPDATED_AT
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "go.infratographer.com/instance-api/internal/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  instances(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Instances returned from the connection."""
    orderBy: InstanceOrder
  ): InstanceConnection!
  instanceMetadataSlice(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for InstanceMetadataSlice returned from the connection."""
    orderBy: InstanceMetadataOrder
  ): InstanceMetadataConnection!
  instanceProviders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for InstanceProviders returned from the connection."""
    orderBy: InstanceProviderOrder
  ): InstanceProviderConnection!
}
"""The builtin Time type"""
scalar Time
