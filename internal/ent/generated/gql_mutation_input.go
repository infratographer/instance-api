// Copyright 2023 The Infratographer Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by entc, DO NOT EDIT.

package generated

import (
	"encoding/json"
	"time"

	"go.infratographer.com/x/idx"
)

// CreateInstanceInput represents a mutation input for creating instances.
type CreateInstanceInput struct {
	LocationID         *idx.PrefixedID
	TenantID           *idx.PrefixedID
	Name               string
	InstanceProviderID idx.PrefixedID
	MetadatumIDs       []idx.PrefixedID
}

// Mutate applies the CreateInstanceInput on the InstanceMutation builder.
func (i *CreateInstanceInput) Mutate(m *InstanceMutation) {
	if v := i.LocationID; v != nil {
		m.SetLocationID(*v)
	}
	if v := i.TenantID; v != nil {
		m.SetTenantID(*v)
	}
	m.SetName(i.Name)
	m.SetInstanceProviderID(i.InstanceProviderID)
	if v := i.MetadatumIDs; len(v) > 0 {
		m.AddMetadatumIDs(v...)
	}
}

// SetInput applies the change-set in the CreateInstanceInput on the InstanceCreate builder.
func (c *InstanceCreate) SetInput(i CreateInstanceInput) *InstanceCreate {
	i.Mutate(c.Mutation())
	return c
}

// CreateInstanceMetadataInput represents a mutation input for creating instancemetadataslice.
type CreateInstanceMetadataInput struct {
	Namespace  string
	Data       json.RawMessage
	InstanceID idx.PrefixedID
}

// Mutate applies the CreateInstanceMetadataInput on the InstanceMetadataMutation builder.
func (i *CreateInstanceMetadataInput) Mutate(m *InstanceMetadataMutation) {
	m.SetNamespace(i.Namespace)
	if v := i.Data; v != nil {
		m.SetData(v)
	}
	m.SetInstanceID(i.InstanceID)
}

// SetInput applies the change-set in the CreateInstanceMetadataInput on the InstanceMetadataCreate builder.
func (c *InstanceMetadataCreate) SetInput(i CreateInstanceMetadataInput) *InstanceMetadataCreate {
	i.Mutate(c.Mutation())
	return c
}

// CreateInstanceProviderInput represents a mutation input for creating instanceproviders.
type CreateInstanceProviderInput struct {
	Name        string
	CreatedAt   *time.Time
	UpdatedAt   *time.Time
	InstanceIDs []idx.PrefixedID
}

// Mutate applies the CreateInstanceProviderInput on the InstanceProviderMutation builder.
func (i *CreateInstanceProviderInput) Mutate(m *InstanceProviderMutation) {
	m.SetName(i.Name)
	if v := i.CreatedAt; v != nil {
		m.SetCreatedAt(*v)
	}
	if v := i.UpdatedAt; v != nil {
		m.SetUpdatedAt(*v)
	}
	if v := i.InstanceIDs; len(v) > 0 {
		m.AddInstanceIDs(v...)
	}
}

// SetInput applies the change-set in the CreateInstanceProviderInput on the InstanceProviderCreate builder.
func (c *InstanceProviderCreate) SetInput(i CreateInstanceProviderInput) *InstanceProviderCreate {
	i.Mutate(c.Mutation())
	return c
}
