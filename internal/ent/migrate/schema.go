// Copyright 2022 The Infratographer Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// InstancesColumns holds the columns for the "instances" table.
	InstancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeUUID},
		{Name: "instance_provider_id", Type: field.TypeUUID},
	}
	// InstancesTable holds the schema information for the "instances" table.
	InstancesTable = &schema.Table{
		Name:       "instances",
		Columns:    InstancesColumns,
		PrimaryKey: []*schema.Column{InstancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "instances_instance_providers_instance_provider",
				Columns:    []*schema.Column{InstancesColumns[5]},
				RefColumns: []*schema.Column{InstanceProvidersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// InstanceMetadataColumns holds the columns for the "instance_metadata" table.
	InstanceMetadataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "namespace", Type: field.TypeString, Size: 2147483647},
		{Name: "data", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "instance_id", Type: field.TypeUUID},
	}
	// InstanceMetadataTable holds the schema information for the "instance_metadata" table.
	InstanceMetadataTable = &schema.Table{
		Name:       "instance_metadata",
		Columns:    InstanceMetadataColumns,
		PrimaryKey: []*schema.Column{InstanceMetadataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "instance_metadata_instances_instance",
				Columns:    []*schema.Column{InstanceMetadataColumns[5]},
				RefColumns: []*schema.Column{InstancesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// InstanceProvidersColumns holds the columns for the "instance_providers" table.
	InstanceProvidersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// InstanceProvidersTable holds the schema information for the "instance_providers" table.
	InstanceProvidersTable = &schema.Table{
		Name:       "instance_providers",
		Columns:    InstanceProvidersColumns,
		PrimaryKey: []*schema.Column{InstanceProvidersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		InstancesTable,
		InstanceMetadataTable,
		InstanceProvidersTable,
	}
)

func init() {
	InstancesTable.ForeignKeys[0].RefTable = InstanceProvidersTable
	InstanceMetadataTable.ForeignKeys[0].RefTable = InstancesTable
}
