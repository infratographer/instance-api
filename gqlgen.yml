# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - schema/*.graphql

# Where should the generated server code go?
exec:
  filename: internal/graphapi/generated/generated.go
  package: graphapigen

# Uncomment to enable federation
federation:
  filename: internal/graphapi/generated/federation.go
  package: graphapigen
  version: 2

# Where should any generated models go?
model:
  filename: internal/graphapi/generated/models_gen.go
  package: graphapigen

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: internal/graphapi
  package: graphapi
  filename_template: "{name}.resolvers.go"

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: turn off to make struct-type struct fields not use pointers
# e.g. type Thing struct { FieldA OtherThing } instead of { FieldA *OtherThing }
# struct_fields_always_pointers: true

# Optional: turn off to make resolvers return values instead of pointers for structs
# resolvers_always_return_pointers: true

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
 - "go.infratographer.com/instance-api/internal/ent/generated"
 - "go.infratographer.com/instance-api/internal/ent/generated/instance"
 - "go.infratographer.com/instance-api/internal/ent/generated/instanceprovider"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - go.infratographer.com/x/idx.PrefixedID
      # - github.com/99designs/gqlgen/graphql.ID
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  JSON:
    model:
      - go.infratographer.com/instance-api/xthings/gqltypes.RawMessage
  Node:
    model:
      - go.infratographer.com/instance-api/internal/ent/generated.Noder
  Tenant:
    fields:
      instances:
        resolver: true
  Location:
    fields:
      instances:
        resolver: true
